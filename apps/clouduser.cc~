/* -*-	Mode:C++; c-basic-offset:8; tab-width:8; indent-tabs-mode:t -*- */
/*
 * Copyright (c) 1996 Regents of the University of California.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 * 	This product includes software developed by the MASH Research
 * 	Group at the University of California Berkeley.
 * 4. Neither the name of the University nor of the Research Group may be
 *    used to endorse or promote products derived from this software without
 *    specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef lint
static const char rcsid[] =
    "@(#) $Header: /cvsroot/nsnam/ns-2/common/clouduser.cc,v 1.43 $";
#endif

#include <stdlib.h>
#include "datacenter.h"
#include "clouduser.h"

static class CloudUserClass : public TclClass {
public:
	CloudUserClass() : TclClass("CloudUser") {}
	TclObject* create(int argc, const char*const*argv) {
		return (new CloudUser());
	}
} class_clouduser;

CloudUser::CloudUser()
{	
//	bind("valueX_", &valueX_);
}


CloudUser::~CloudUser()
{
	task_list.~vector();
}

void CloudUser::addDataCenterPointer(DataCenter *joindc_)
{	
	dc_ = joindc_;
}

//void CloudUser::gentask(params)
//{	

//}

void CloudUser::addTask(TskObject *newtsk)
{
	task_list.push_back(newtsk);
}
void CloudUser::rmovTask(TskObject *tsk)
{
	
}


int CloudUser::command(int argc, const char*const* argv)
{
//	if (argc == 3) {
//		if (strcmp(argv[1], "generate-task") == 0) { 
//		  User *usr = dynamic_cast<User*> (TclObject::lookup(argv[2]));
//		  if(usr){
//			  addUserPointer(usr);
//     			  return (TCL_OK);
// 			 }
//		  return (TCL_ERROR);
//		}
	if (argc == 3) {
		if (strcmp(argv[1], "join-datacenter") == 0) { 
		  DataCenter *dc = dynamic_cast<DataCenter*> (TclObject::lookup(argv[2]));
		  if(dc){
			  addDataCenterPointer(dc);
     			  return (TCL_OK);
 			 }
		  return (TCL_ERROR);
		}
	}
	return (CloudUser::command(argc, argv));	
}
